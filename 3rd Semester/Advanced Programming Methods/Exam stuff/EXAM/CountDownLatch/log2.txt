Id: 1
Execution stack: 
(Ref(int) v1|(Ref(int) v2|(Ref(int) v3|(int cnt|(new(v1, 2)|(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100)))))))))))))
Symbol table: 
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
Ref(int) v1
(Ref(int) v2|(Ref(int) v3|(int cnt|(new(v1, 2)|(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))))))))))
Symbol table: 
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
Ref(int) v1
(Ref(int) v2|(Ref(int) v3|(int cnt|(new(v1, 2)|(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))))))))))
Symbol table: 
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
(Ref(int) v2|(Ref(int) v3|(int cnt|(new(v1, 2)|(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))))))))))
Symbol table: 
v1 -> (0, int)
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
(Ref(int) v2|(Ref(int) v3|(int cnt|(new(v1, 2)|(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))))))))))
Symbol table: 
v1 -> (0, int)
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
Ref(int) v2
(Ref(int) v3|(int cnt|(new(v1, 2)|(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100)))))))))))
Symbol table: 
v1 -> (0, int)
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
Ref(int) v2
(Ref(int) v3|(int cnt|(new(v1, 2)|(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100)))))))))))
Symbol table: 
v1 -> (0, int)
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
(Ref(int) v3|(int cnt|(new(v1, 2)|(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100)))))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
(Ref(int) v3|(int cnt|(new(v1, 2)|(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100)))))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
Ref(int) v3
(int cnt|(new(v1, 2)|(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
Ref(int) v3
(int cnt|(new(v1, 2)|(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
(int cnt|(new(v1, 2)|(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
(int cnt|(new(v1, 2)|(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
int cnt
(new(v1, 2)|(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100)))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
int cnt
(new(v1, 2)|(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100)))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
(new(v1, 2)|(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100)))))))))
Symbol table: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
(new(v1, 2)|(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100)))))))))
Symbol table: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
new(v1, 2)
(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))))))
Symbol table: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
new(v1, 2)
(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))))))
Symbol table: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
Latch table:

Id: 1
Execution stack: 
(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> 2
Latch table:

Id: 1
Execution stack: 
(new(v2, 3)|(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> 2
Latch table:

Id: 1
Execution stack: 
new(v2, 3)
(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100)))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> 2
Latch table:

Id: 1
Execution stack: 
new(v2, 3)
(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100)))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> 2
Latch table:

Id: 1
Execution stack: 
(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100)))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
Latch table:

Id: 1
Execution stack: 
(new(v3, 4)|(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100)))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
Latch table:

Id: 1
Execution stack: 
new(v3, 4)
(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
Latch table:

Id: 1
Execution stack: 
new(v3, 4)
(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
Latch table:

Id: 1
Execution stack: 
(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch table:

Id: 1
Execution stack: 
(newLatch(cnt, rH(v2))|(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch table:

Id: 1
Execution stack: 
newLatch(cnt, rH(v2))
(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100)))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch table:

Id: 1
Execution stack: 
newLatch(cnt, rH(v2))
(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100)))))
Symbol table: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch table:

Id: 1
Execution stack: 
(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100)))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 1
Execution stack: 
(Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))|(await(cnt)|(Print(100)|(countDown(cnt)|Print(100)))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 1
Execution stack: 
Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))
(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 1
Execution stack: 
Fork((wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))))
(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 1
Execution stack: 
(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 2
Execution stack: 
(wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt)))))))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 1
Execution stack: 
(await(cnt)|(Print(100)|(countDown(cnt)|Print(100))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 2
Execution stack: 
(wH(v1, rH(v1) * 10)|(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt)))))))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 2
Execution stack: 
wH(v1, rH(v1) * 10)
(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 2
Execution stack: 
wH(v1, rH(v1) * 10)
(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 2
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 2
Execution stack: 
(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 2
Execution stack: 
(Print(rH(v1))|(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 2
Execution stack: 
Print(rH(v1))
(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt)))))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 2
Execution stack: 
Print(rH(v1))
(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt)))))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 2
Execution stack: 
(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt)))))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 2
Execution stack: 
(countDown(cnt)|Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt)))))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 2
Execution stack: 
countDown(cnt)
Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 2
Execution stack: 
countDown(cnt)
Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 3

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 2

Id: 2
Execution stack: 
Print(2)
Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 2

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 2

Id: 2
Execution stack: 
Print(2)
Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 2

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 2

Id: 2
Execution stack: 
Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 2

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 2

Id: 2
Execution stack: 
Fork((wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 2

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 2

Id: 2
Execution stack: 
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 2

Id: 3
Execution stack: 
(wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt)))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 2

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 2

Id: 3
Execution stack: 
(wH(v2, rH(v2) * 10)|(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt)))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 2

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 2

Id: 3
Execution stack: 
wH(v2, rH(v2) * 10)
(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 2

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 2

Id: 3
Execution stack: 
wH(v2, rH(v2) * 10)
(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 3
3 -> 4
Latch table:
1 -> 2

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 2

Id: 3
Execution stack: 
(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 2

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 2

Id: 3
Execution stack: 
(Print(rH(v2))|(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 2

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 2

Id: 3
Execution stack: 
Print(rH(v2))
(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt)))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 2

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 2

Id: 3
Execution stack: 
Print(rH(v2))
(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt)))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 2

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 2

Id: 3
Execution stack: 
(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt)))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 2

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 2

Id: 3
Execution stack: 
(countDown(cnt)|Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt)))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 2

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 2

Id: 3
Execution stack: 
countDown(cnt)
Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 2

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 2

Id: 3
Execution stack: 
countDown(cnt)
Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 2

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 1

Id: 3
Execution stack: 
Print(3)
Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 1

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 1

Id: 3
Execution stack: 
Print(3)
Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 1

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 1

Id: 3
Execution stack: 
Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 1

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 1

Id: 3
Execution stack: 
Fork((wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt))))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 1

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 1

Id: 3
Execution stack: 
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 1

Id: 4
Execution stack: 
(wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 1

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 1

Id: 4
Execution stack: 
(wH(v3, rH(v3) * 10)|(Print(rH(v3))|countDown(cnt)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 1

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 1

Id: 4
Execution stack: 
wH(v3, rH(v3) * 10)
(Print(rH(v3))|countDown(cnt))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 1

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 1

Id: 4
Execution stack: 
wH(v3, rH(v3) * 10)
(Print(rH(v3))|countDown(cnt))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 4
Latch table:
1 -> 1

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 1

Id: 4
Execution stack: 
(Print(rH(v3))|countDown(cnt))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 1

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 1

Id: 4
Execution stack: 
(Print(rH(v3))|countDown(cnt))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 1

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 1

Id: 4
Execution stack: 
Print(rH(v3))
countDown(cnt)
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 1

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 1

Id: 4
Execution stack: 
Print(rH(v3))
countDown(cnt)
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 1

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 1

Id: 4
Execution stack: 
countDown(cnt)
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 1

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 1

Id: 4
Execution stack: 
countDown(cnt)
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 1

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

Id: 4
Execution stack: 
Print(4)
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

Id: 1
Execution stack: 
await(cnt)
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

Id: 4
Execution stack: 
Print(4)
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

Id: 1
Execution stack: 
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
4
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

Id: 4
Execution stack: 
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
4
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

Id: 1
Execution stack: 
(Print(100)|(countDown(cnt)|Print(100)))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
4
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

Id: 1
Execution stack: 
Print(100)
(countDown(cnt)|Print(100))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
4
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

Id: 1
Execution stack: 
Print(100)
(countDown(cnt)|Print(100))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
4
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

Id: 1
Execution stack: 
(countDown(cnt)|Print(100))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
4
100
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

Id: 1
Execution stack: 
(countDown(cnt)|Print(100))
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
4
100
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

Id: 1
Execution stack: 
countDown(cnt)
Print(100)
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
4
100
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

Id: 1
Execution stack: 
countDown(cnt)
Print(100)
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
4
100
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

Id: 1
Execution stack: 
Print(1)
Print(100)
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
4
100
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

Id: 1
Execution stack: 
Print(1)
Print(100)
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
4
100
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

Id: 1
Execution stack: 
Print(100)
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
4
100
1
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

Id: 1
Execution stack: 
Print(100)
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
4
100
1
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

Id: 1
Execution stack: 
Symbol table: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
20
2
30
3
40
4
100
1
100
File table:
Heap memory:
1 -> 20
2 -> 30
3 -> 40
Latch table:
1 -> 0

