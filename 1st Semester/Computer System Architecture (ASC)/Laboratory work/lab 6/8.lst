     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 785634124D3C2C1A76-         s DD 12345678h, 1A2C3C4Dh, 98FCDC76h
    13 00000009 DCFC98             
    14                                      len_s   equ   ($-s)/4
    15 0000000C 00                          d db 0
    16 0000000D 0A                          zece db 10
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 B903000000                      mov ecx, len_s
    22 00000005 BE[00000000]                    mov esi, s
    23 0000000A BF[0C000000]                    mov edi, d
    24 0000000F E323                            jecxz theend
    25                                      repeat:
    26 00000011 BB00000000                      mov ebx, 0
    27 00000016 B800000000                      mov eax, 0
    28                                          
    29 0000001B AD                              lodsd   ; eax = ds:esi   + esi = esi + 4
    30 0000001C C1E810                          shr eax, 16
    31 0000001F B400                            mov ah, 0    ; in AL we will have the low byte of the high word of the high doubleword
    32                                          
    33 00000021 F635[0D000000]                  div byte [zece] 
    34                                          
    35 00000027 88E3                            mov bl, ah
    36 00000029 88C7                            mov bh, al    ; we got the palindrome of ah:al in bh:bl 
    37                                          
    38 0000002B 38D8                            cmp al, bl
    39 0000002D 38FC                            cmp ah, bh
    40 0000002F 7501                            jne continue
    41                                          
    42 00000031 AA                              stosb  ; mov [edi], al  + inc edi
    43                                          
    44                                          continue:
    45 00000032 E2DD                            loop repeat
    46                                      
    47                                      theend:    
    48                                          ; exit(0)
    49 00000034 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    50 00000036 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
