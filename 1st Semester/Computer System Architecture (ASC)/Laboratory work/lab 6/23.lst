     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 0204020502020404            s db 2, 4, 2, 5, 2, 2, 4, 4
    14                                      len_s equ $-s
    15 00000008 0000                        d dw 0
    16                                  
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 BE[00000000]                    mov esi, s
    21 00000005 B908000000                      mov ecx, len_s
    22 0000000A BF[08000000]                    mov edi, d
    23 0000000F E322                            jecxz theend
    24                                      repeat:
    25 00000011 AC                              lodsb
    26 00000012 88C3                            mov bl, al
    27 00000014 56                              push esi
    28                                          
    29 00000015 51                              push ecx
    30 00000016 B908000000                      mov ecx, len_s
    31                                          
    32 0000001B B400                            mov ah, 0
    33 0000001D BE[00000000]                    mov esi, s
    34                                          
    35                                          repeat2:
    36 00000022 AC                                  lodsb
    37                                              
    38 00000023 38D8                                cmp al, bl
    39 00000025 7502                                jne continue
    40                                              
    41 00000027 FEC4                                inc ah
    42                                              
    43                                              continue:
    44 00000029 E2F7                                loop repeat2
    45                                          
    46 0000002B 88D8                            mov al, bl
    47 0000002D 66AB                            stosw
    48                                          
    49 0000002F 59                              pop ecx
    50 00000030 5E                              pop esi
    51                                          
    52 00000031 E2DE                            loop repeat
    53                                      
    54                                      theend:
    55                                          ; exit(0)
    56 00000033 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    57 00000035 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
