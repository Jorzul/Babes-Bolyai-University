     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 0104020408020101            s db 1, 4, 2, 4, 8, 2, 1, 1
    14                                      l equ $-s
    15 00000008 00<rept>                    d times l db 0
    16                                  
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 B908000000                      mov ecx, l
    21 00000005 BE00000000                      mov esi, 0
    22 0000000A BA00000000                      mov edx, 0
    23 0000000F E32D                            jecxz Exit
    24                                          Repeat:
    25 00000011 8A86[00000000]                      mov al,[s+esi]
    26 00000017 51                                  push ecx
    27 00000018 B908000000                          mov ecx, l
    28 0000001D BF00000000                          mov edi, 0
    29 00000022 E316                                jecxz Done
    30                                              CheckD:
    31 00000024 8A9F[08000000]                          mov bl,[d+edi]
    32 0000002A 38D8                                    cmp al, bl
    33 0000002C 7409                                    je notOK
    34 0000002E 8882[08000000]                          mov [d+edx],al
    35 00000034 42                                      inc edx
    36 00000035 EB03                                    jmp Done
    37                                                  notOK:
    38 00000037 47                                      inc edi
    39 00000038 E2EA                                loop CheckD
    40                                              Done:
    41 0000003A 59                                  pop ECX
    42 0000003B 46                                  inc esi
    43 0000003C E2D3                            loop Repeat
    44                                          
    45                                          Exit:
    46                                          ; exit(0)
    47 0000003E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    48 00000040 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
