     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, scanf, fopen, fclose, fprintf, fread               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  import scanf msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  import fprintf msvcrt.dll
    14                                  import fread msvcrt.dll
    15                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    16                                  
    17                                  ; our data is declared here (the variables needed by our program)
    18                                  segment data use32 class=data
    19 00000000 6D6972656C2E747874-             fisier db "mirel.txt", 0
    19 00000009 00                 
    20 0000000A 7200                            format_fisier db "r", 0
    21 0000000C FFFFFFFF                        descriptor dd -1
    22                                          len equ 100
    23 00000010 00<rept>                        a times len db 0
    24                                  
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28 00000000 68[0A000000]                    push dword format_fisier
    29 00000005 68[00000000]                    push dword fisier
    30 0000000A FF15[00000000]                  call [fopen]
    31 00000010 83C408                          add esp, 4*2
    32                                          
    33 00000013 A3[0C000000]                    mov [descriptor], eax
    34                                          
    35 00000018 833D[0C000000]00                cmp [descriptor], dword 0
    36 0000001F 7426                            je gata
    37                                          
    38 00000021 FF35[0C000000]                  push dword [descriptor]
    39 00000027 6A64                            push dword len
    40 00000029 6A01                            push dword 1
    41 0000002B 68[10000000]                    push dword a
    42 00000030 FF15[00000000]                  call [fread]
    43 00000036 83C410                          add esp, 4*4
    44                                          
    45 00000039 68[10000000]                    push dword a
    46 0000003E FF15[00000000]                  call [printf]
    47 00000044 83C404                          add esp, 4
    48                                      gata:
    49                                          
    50                                          ; exit(0)
    51 00000047 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    52 00000049 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
